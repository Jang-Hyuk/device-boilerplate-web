<div class="container_row flex_jus_end default_search_area mt0">
  <div class="search_area">
    <div class="search_box">
      <span class="search_title">조회기간</span>
      <select id="searchType" class="form-control">
        <option value="days">일일</option>
        <option value="months">월간</option>
        <option value="years">년간</option>
        <option value="range">기간선택</option>
      </select>
    </div>
    <div class="search_box">
      <span class="search_title">조회간격</span>
      <select id="searchInterval" class="form-control">
        <option value="min">1분</option>
        <option value="min10">10분</option>
        <option value="hour">1시간</option>
        <option value="day">1일</option>
        <option value="month">1달</option>
      </select>
    </div>
    <div class="search_box">
      <span class="search_title">날짜</span>
      <div class="search_body">
        <input
          class="input_tre"
          name="start"
          id="strStartDateInputValue"
          type="text"
          readonly
        />
        <span id="between-start-end" hidden>~</span>
        <input
          class="input_tre"
          name="end"
          id="strEndDateInputValue"
          type="text"
          readonly
          hidden
        />
      </div>
    </div>
    <div class="submit_box">
      <button type="button" class="btn btn-primary" id="searchBtn">
        검색
      </button>
    </div>
  </div>
</div>

<script>
  // 검색 조회기간 변경 시 조회 간격 돔 자동 변경
  document.querySelector('#searchType').addEventListener('change', function (event) {
    const searchInfo = {
      days: ['min', 'min10', 'hour', 'day'],
      months: ['min', 'min10', 'hour', 'day', 'month'],
      years: ['hour', 'day', 'month'],
      range: ['min', 'min10', 'hour', 'day'],
    };
    const searchInervalTxt = {
      min: '1분',
      min10: '10분',
      hour: '1시간',
      day: '1일',
      month: '1달',
    };

    // 템플릿 정의
    const optionTemplate = Handlebars.compile(
      '<option {{ selected }}  value="{{ optionId }}">{{ optionValue }}</option>',
    );

    const intervalSelectDom = searchInfo[this.value].map(intervalTxt => {
      return optionTemplate({
        optionId: intervalTxt,
        optionValue: searchInervalTxt[intervalTxt],
      });
    });

    document.querySelector('#searchInterval').innerHTML = intervalSelectDom;
  });

  // 검색 클릭 시
  document.querySelector('#searchBtn').addEventListener('click', function (event) {
    // searchRange 형태 만듬
    var searchValue = getSearchValue();
    // 생성된 searchRange로 쿼리스트링 생성
    var queryString = makeSearchQueryString(searchValue);
    // 쿼리스트링이 정상적으로 만들어 질 경우

    if (queryString.length) {
      document.getElementById('loader').classList.remove('hidden');
      document.getElementById('loader-ground').classList.remove('hidden');

      // 사이트 변경 시
      location.href = `${window.location.origin}/${naviId}/${siteId}/${subCategory}?${queryString}`;
    }
  });
</script>
